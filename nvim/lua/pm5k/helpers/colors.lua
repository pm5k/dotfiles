vim.g.colors_name = "onedark"
vim.o.background = "dark"
local HI = vim.api.nvim_set_hl
vim.g.terminal_color_0 = "#282c34"
vim.g.terminal_color_1 = "#e06c75"
vim.g.terminal_color_2 = "#98c379"
vim.g.terminal_color_3 = "#e5c07b"
vim.g.terminal_color_4 = "#61afef"
vim.g.terminal_color_5 = "#c678dd"
vim.g.terminal_color_6 = "#56b6c2"
vim.g.terminal_color_7 = "#abb2bf"
vim.g.terminal_color_8 = "#5c6370"
vim.g.terminal_color_9 = "#ff7b85"
vim.g.terminal_color_10 = "#b6e991"
vim.g.terminal_color_11 = "#ffd689"
vim.g.terminal_color_12 = "#67bbff"
vim.g.terminal_color_13 = "#e48aff"
vim.g.terminal_color_14 = "#67dae8"
vim.g.terminal_color_15 = "#abb2bf"
HI(0, "@type.qualifier", { link = "@type" })
HI(0, "@type.qualifier.java", { fg = "#C678DD" })
HI(0, "@type.qualifier.php", { link = "@keyword.function" })
HI(0, "@type.qualifier.rust", { fg = "#C678DD" })
HI(0, "@type.scss", { fg = "#E06C75" })
HI(0, "@variable", { fg = "#E06C75" })
HI(0, "@variable.builtin", { fg = "#E5C07B" })
HI(0, "@variable.builtin.javascript", { fg = "#E5C07B" })
HI(0, "@variable.builtin.python", { fg = "#E5C07B" })
HI(0, "@variable.builtin.typescript", { fg = "#E5C07B" })
HI(0, "@variable.go", { fg = "#E06C75" })
HI(0, "@variable.javascript", { fg = "#E06C75" })
HI(0, "@variable.rust", { fg = "#E06C75" })
HI(0, "@variable.typescript", { fg = "#E06C75" })
HI(0, "AerialClass", { fg = "#C678DD" })
HI(0, "BqfPreviewBorder", { fg = "#5C6370" })
HI(0, "BqfPreviewRange", { fg = "#98C379" })
HI(0, "TelescopePromptBorder", { link = "TelescopeBorder" })
HI(0, "BufferCurrent", { bg = "#282C34", fg = "#C678DD" })
HI(0, "BufferCurrentIcon", { link = "BufferCurrentMod" })
HI(0, "BufferCurrentIndex", { link = "BufferCurrent" })
HI(0, "BufferCurrentMod", { fg = "#C678DD" })
HI(0, "BufferCurrentSign", { link = "BufferCurrentMod" })
HI(0, "BufferCurrentTarget", { bg = "#282C34", fg = "#61AFEF" })
HI(0, "Error", { fg = "#E06C75" })
HI(0, "DiagnosticUnnecessary", { link = "Comment" })
HI(0, "DiagnosticDeprecated", { cterm = { strikethrough = true }, sp = "#FF0000", strikethrough = true })
HI(0, "Bold", { bold = true, cterm = { bold = true } })
HI(0, "NormalFloat", { bg = "#21252B" })
HI(0, "NvimInvalidSpacing", { link = "ErrorMsg" })
HI(0, "NvimInvalidString", { link = "NvimInvalidValue" })
HI(0, "NvimInvalidStringBody", { link = "NvimStringBody" })
HI(0, "NvimInvalidStringQuote", { link = "NvimInvalidString" })
HI(0, "NvimInvalidStringSpecial", { link = "NvimStringSpecial" })
HI(0, "NvimInvalidSubscript", { link = "NvimInvalidParenthesis" })
HI(0, "NvimInvalidSubscriptBracket", { link = "NvimInvalidSubscript" })
HI(0, "NvimInvalidSubscriptColon", { link = "NvimInvalidSubscript" })
HI(0, "NvimInvalidTernary", { link = "NvimInvalidOperator" })
HI(0, "NvimInvalidTernaryColon", { link = "NvimInvalidTernary" })
HI(0, "NvimInvalidUnaryMinus", { link = "NvimInvalidUnaryOperator" })
HI(0, "NvimInvalidUnaryOperator", { link = "NvimInvalidOperator" })
HI(0, "NvimInvalidUnaryPlus", { link = "NvimInvalidUnaryOperator" })
HI(0, "NvimInvalidValue", { link = "NvimInvalid" })
HI(0, "NvimLambda", { link = "NvimParenthesis" })
HI(0, "NvimList", { link = "NvimContainer" })
HI(0, "NvimMod", { link = "NvimBinaryOperator" })
HI(0, "NvimMultiplication", { link = "NvimBinaryOperator" })
HI(0, "NvimNestingParenthesis", { link = "NvimParenthesis" })
HI(0, "NvimNot", { link = "NvimUnaryOperator" })
HI(0, "NvimNumber", { link = "Number" })
HI(0, "NvimNumberPrefix", { link = "Type" })
HI(0, "NvimOperator", { link = "Operator" })
HI(0, "DiagnosticVirtualTextHint", { fg = "#7EC7D1" })
HI(0, "NvimOptionScope", { link = "NvimIdentifierScope" })
HI(0, "NvimOptionScopeDelimiter", { link = "NvimIdentifierScopeDelimiter" })
HI(0, "DiagnosticVirtualTextError", { fg = "#E8939A" })
HI(0, "NvimOr", { link = "NvimBinaryOperator" })
HI(0, "NvimParenthesis", { link = "Delimiter" })
HI(0, "NvimPlainAssignment", { link = "NvimAssignment" })
HI(0, "DiagnosticVirtualTextWarn", { fg = "#EDD2A1" })
HI(0, "NvimSingleQuote", { link = "NvimStringQuote" })
HI(0, "NvimSingleQuotedBody", { link = "NvimStringBody" })
HI(0, "NvimSingleQuotedQuote", { link = "NvimStringSpecial" })
HI(0, "DiagnosticVirtualTextInfo", { fg = "#90C7F4" })
HI(0, "NvimSpacing", { link = "Normal" })
HI(0, "NvimString", { link = "String" })
HI(0, "NvimStringBody", { link = "NvimString" })
HI(0, "NvimStringQuote", { link = "NvimString" })
HI(0, "DiagnosticFloatingHint", { link = "DiagnosticHint" })
HI(0, "NvimSubscript", { link = "NvimParenthesis" })
HI(0, "NvimSubscriptBracket", { link = "NvimSubscript" })
HI(0, "DiagnosticFloatingInfo", { link = "DiagnosticInfo" })
HI(0, "DiagnosticSignHint", { fg = "#56B6C2" })
HI(0, "NvimTernaryColon", { link = "NvimTernary" })
HI(0, "NvimTreeCIcon", { fg = "#61AFEF" })
HI(0, "NvimTreeEmptyFolderName", { fg = "#5C6370" })
HI(0, "NvimTreeExecFile", { fg = "#98C379" })
HI(0, "NvimTreeFolderIcon", { fg = "#C678DD" })
HI(0, "NvimTreeFolderName", { fg = "#61AFEF" })
HI(0, "NvimTreeGitDeleted", { fg = "#E06C75" })
HI(0, "NvimTreeGitDirty", { fg = "#E06C75" })
HI(0, "NvimTreeGitMerge", { fg = "#56B6C2" })
HI(0, "NvimTreeGitNew", { fg = "#98C379" })
HI(0, "NvimTreeGitRenamed", { fg = "#E5C07B" })
HI(0, "NvimTreeGitStaged", { fg = "#E5C07B" })
HI(0, "NvimTreeGitignoreIcon", { fg = "#E06C75" })
HI(0, "NvimTreeHtmlIcon", { fg = "#E06C75" })
HI(0, "NvimTreeIndentMarker", { fg = "#5C6370" })
HI(0, "NvimTreeJavascriptIcon", { fg = "#E5C07B" })
HI(0, "NvimTreeJsonIcon", { fg = "#98C379" })
HI(0, "NvimTreeLicenseIcon", { fg = "#E5C07B" })
HI(0, "NvimTreeLuaIcon", { fg = "#61AFEF" })
HI(0, "NvimTreeMarkdownFile", { fg = "#E06C75" })
HI(0, "NvimTreeNormalNC", { bg = "#2D313B" })
HI(0, "NvimTreeOpenedFile", { fg = "#C678DD" })
HI(0, "NvimTreeOpenedFolderName", { fg = "#C678DD" })
HI(0, "NvimTreePythonIcon", { fg = "#E5C07B" })
HI(0, "NvimTreeReactIcon", { fg = "#61AFEF" })
HI(0, "NvimTreeRootFolder", { fg = "#C678DD" })
HI(0, "NvimTreeRustIcon", { fg = "#ABB2BF" })
HI(0, "NvimTreeShellIcon", { fg = "#ABB2BF" })
HI(0, "NvimTreeSpecialFile", { link = "Special" })
HI(0, "NvimTreeSymlink", { fg = "#56B6C2" })
HI(0, "NvimTreeTomlIcon", { fg = "#E5C07B" })
HI(0, "NvimTreeTypescriptIcon", { fg = "#61AFEF" })
HI(0, "NvimTreeVimIcon", { fg = "#98C379" })
HI(0, "NvimTreeYamlIcon", { fg = "#E5C07B" })
HI(0, "NvimUnaryMinus", { link = "NvimUnaryOperator" })
HI(0, "NvimUnaryOperator", { link = "NvimOperator" })
HI(0, "NvimUnaryPlus", { link = "NvimUnaryOperator" })
HI(0, "OpSidebarFavoriteIcon", { fg = "#D19A66" })
HI(0, "OpSidebarHeader", { fg = "#ABB2BF" })
HI(0, "OpSidebarItem", { fg = "#ABB2BF" })
HI(0, "PmenuExtra", { link = "Pmenu" })
HI(0, "PmenuExtraSel", { link = "PmenuSel" })
HI(0, "PmenuKind", { link = "Pmenu" })
HI(0, "PmenuKindSel", { link = "PmenuSel" })
HI(0, "PreCondit", { fg = "#E5C07B" })
HI(0, "lualine_b_diff_added_0_normal", { bg = "#3E4452", fg = "#98C379" })
HI(0, "ProviderTruncateLine", { link = "NormalNC" })
HI(0, "lualine_b_diff_added_0_insert", { bg = "#3E4452", fg = "#98C379" })
HI(0, "QuickFixLine", { bg = "#282C34" })
HI(0, "lualine_b_diff_added_0_visual", { bg = "#3E4452", fg = "#98C379" })
HI(0, "RedrawDebugClear", { bg = "#FFFF00", ctermbg = 11 })
HI(0, "lualine_b_diff_added_0_replace", { bg = "#3E4452", fg = "#98C379" })
HI(0, "RedrawDebugNormal", { cterm = { reverse = true }, reverse = true })
HI(0, "lualine_b_diff_added_0_command", { bg = "#3E4452", fg = "#98C379" })
HI(0, "ReferencesCount", { link = "Title" })
HI(0, "lualine_b_diff_added_0_terminal", { bg = "#3E4452", fg = "#98C379" })
HI(0, "CmpItemKind", { link = "CmpItemKindDefault" })
HI(0, "lualine_b_diff_added_0_inactive", { bg = "#282C34", fg = "#98C379" })
HI(0, "Search", { bg = "#414858", fg = "#E5C07B" })
HI(0, "SignColumn", { bg = "#282C34" })
HI(0, "SignColumnNC", { bg = "#2D313B", fg = "#5C6370" })
HI(0, "SpecialChar", { fg = "#D19A66" })
HI(0, "SpecialComment", { fg = "#7F848E" })
HI(0, "SpecialKey", { ctermfg = 81, fg = "#00FFFF" })
HI(0, "SpellBad", { cterm = { undercurl = true }, fg = "#E06C75", sp = "#E06C75", undercurl = true })
HI(0, "SpellCap", { cterm = { undercurl = true }, fg = "#E06C75", sp = "#E06C75", undercurl = true })
HI(0, "SpellLocal", { cterm = { undercurl = true }, fg = "#E06C75", sp = "#E06C75", undercurl = true })
HI(0, "SpellRare", { cterm = { undercurl = true }, fg = "#E06C75", sp = "#E06C75", undercurl = true })
HI(0, "StartifyBracket", { fg = "#ABB2BF" })
HI(0, "DiffChange", { bg = "#8B008B", ctermbg = 5 })
HI(0, "StartifyFooter", { fg = "#ABB2BF" })
HI(0, "StartifyHeader", { fg = "#98C379" })
HI(0, "StartifyNumber", { fg = "#E5C07B" })
HI(0, "StartifyPath", { fg = "#5C6370" })
HI(0, "StartifySection", { fg = "#61AFEF" })
HI(0, "StartifySelect", { fg = "#56B6C2" })
HI(0, "StartifySlash", { fg = "#5C6370" })
HI(0, "StartifySpecial", { fg = "#E06C75" })
HI(0, "CmpItemMenu", { fg = "#5C6370" })
HI(0, "CmpItemAbbrMatchFuzzy", { fg = "#61AFEF" })
HI(0, "CmpItemAbbrMatch", { fg = "#61AFEF" })
HI(0, "CmpItemAbbrDeprecated", { fg = "#ABB2BF" })
HI(0, "TSRainbowCyan", { fg = "#56B6C2" })
HI(0, "TSRainbowGreen", { fg = "#98C379" })
HI(0, "TSRainbowOrange", { fg = "#D19A66" })
HI(0, "TSRainbowRed", { fg = "#E06C75" })
HI(0, "TSRainbowViolet", { fg = "#C678DD" })
HI(0, "TSRainbowYellow", { fg = "#E5C07B" })
HI(0, "TabLine", { bg = "#282C34" })
HI(0, "TabLineSel", { bg = "#C678DD", fg = "#282C34" })
HI(0, "Tag", { link = "Special" })
HI(0, "TargetFileName", { fg = "#5C6370" })
HI(0, "TargetWord", { link = "Error" })
HI(0, "TelescopePreviewSocket", { link = "Statement" })
HI(0, "TelescopePreviewLink", { link = "Special" })
HI(0, "TelescopePreviewHyphen", { link = "NonText" })
HI(0, "TelescopePreviewExecute", { link = "String" })
HI(0, "TelescopePreviewWrite", { link = "Statement" })
HI(0, "TelescopePreviewDate", { link = "Directory" })
HI(0, "Identifier", { fg = "#E06C75" })
HI(0, "lualine_transitional_lualine_a_normal_to_lualine_c_normal", { bg = "#2C323C", fg = "#98C379" })
HI(0, "lualine_transitional_lualine_a_normal_to_lualine_b_normal", { bg = "#3E4452", fg = "#98C379" })
HI(0, "lualine_transitional_lualine_b_normal_to_lualine_c_normal", { bg = "#2C323C", fg = "#3E4452" })
HI(0, "LspDiagnosticsDefaultError", { link = "DiagnosticError" })
HI(0, "DiffDelete", { bg = "#501B20" })
HI(0, "LspDiagnosticsDefaultWarning", { link = "DiagnosticWarn" })
HI(0, "DiffText", { bg = "#005869" })
HI(0, "LspDiagnosticsDefaultInformation", { link = "DiagnosticInfo" })
HI(0, "LspDiagnosticsDefaultHint", { link = "DiagnosticHint" })
HI(0, "TelescopePreviewBlock", { link = "Constant" })
HI(0, "TelescopePreviewCharDev", { link = "Constant" })
HI(0, "TelescopePreviewGroup", { link = "Constant" })
HI(0, "lualine_b_diff_added_normal", { bg = "#3E4452", fg = "#98C379" })
HI(0, "TelescopePreviewMatch", { link = "Search" })
HI(0, "TelescopePreviewMessage", { link = "TelescopePreviewNormal" })
HI(0, "lualine_b_diff_added_insert", { bg = "#3E4452", fg = "#98C379" })
HI(0, "TelescopePreviewPipe", { link = "Constant" })
HI(0, "TelescopePreviewSticky", { link = "Keyword" })
HI(0, "TelescopePreviewUser", { link = "Constant" })
HI(0, "TelescopeTitle", { link = "TelescopeBorder" })
HI(0, "TermCursorNC", { bg = "#5C6370" })
HI(0, "Todo", { fg = "#C678DD" })
HI(0, "ToggleTerm", { bg = "#282C34", fg = "#ABB2BF" })
HI(0, "ToggleTermBorder", { fg = "#5C6370" })
HI(0, "lualine_b_diff_added_command", { bg = "#3E4452", fg = "#98C379" })
HI(0, "TroubleFile", { fg = "#56B6C2" })
HI(0, "TroubleFoldIcon", { fg = "#ABB2BF" })
HI(0, "TroubleLocation", { fg = "#56B6C2" })
HI(0, "TroubleNormal", vim.empty_dict())
HI(0, "TroubleText", { fg = "#ABB2BF" })
HI(0, "lualine_b_diff_added_inactive", { bg = "#282C34", fg = "#98C379" })
HI(0, "TroubleTextHint", { fg = "#ABB2BF" })
HI(0, "TroubleTextInformation", { fg = "#ABB2BF" })
HI(0, "TroubleTextWarning", { fg = "#ABB2BF" })
HI(0, "Typedef", { fg = "#C678DD" })
HI(0, "UltestBorder", { fg = "#5C6370" })
HI(0, "UltestFail", { fg = "#E06C75" })
HI(0, "UltestInfo", { fg = "#C678DD" })
HI(0, "UltestPass", { fg = "#98C379" })
HI(0, "UltestRunning", { fg = "#E5C07B" })
HI(0, "Underlined", { cterm = { underline = true }, underline = true })
HI(0, "VertSplit", { bg = "#282C34", fg = "#5C6370" })
HI(0, "Visual", { bg = "#414858" })
HI(0, "VisualNOS", { link = "Visual" })
HI(0, "WhichKeyBorder", { link = "FloatBorder" })
HI(0, "WhichKeyDesc", { fg = "#ABB2BF" })
HI(0, "WhichKeyFloat", { bg = "#2D313B" })
HI(0, "WhichKeyGroup", { fg = "#61AFEF" })
HI(0, "WhichKeySeparator", { fg = "#98C379" })
HI(0, "WhichKeyValue", { link = "Comment" })
HI(0, "WildMenu", { bg = "#61AFEF", fg = "#282C34" })
HI(0, "WinBar", { bg = "#282C34", fg = "#ABB2BF" })
HI(0, "WinBarNC", { bg = "#2D313B", fg = "#ABB2BF" })
HI(0, "WinSeparator", { bg = "#282C34", fg = "#5C6370" })
HI(0, "cssAttrComma", { fg = "#C678DD" })
HI(0, "cssAttributeSelector", { fg = "#98C379" })
HI(0, "cssBraces", { fg = "#E06C75" })
HI(0, "cssClassName", { fg = "#D19A66" })
HI(0, "cssClassNameDot", { fg = "#D19A66" })
HI(0, "cssDefinition", { fg = "#C678DD" })
HI(0, "cssFontAttr", { fg = "#D19A66" })
HI(0, "cssFontDescriptor", { link = "cssDefinition" })
HI(0, "cssFunctionName", { fg = "#61AFEF" })
HI(0, "cssIdentifier", { fg = "#61AFEF" })
HI(0, "cssImportant", { link = "cssDefinition" })
HI(0, "cssInclude", { fg = "#ABB2BF" })
HI(0, "cssIncludeKeyword", { link = "cssDefinition" })
HI(0, "cssMediaType", { fg = "#D19A66" })
HI(0, "cssProp", { fg = "#ABB2BF" })
HI(0, "cssPseudoClassId", { fg = "#D19A66" })
HI(0, "cssSelectorOp", { link = "cssDefinition" })
HI(0, "cssSelectorOp2", { link = "cssDefinition" })
HI(0, "cssTagName", { fg = "#E06C75" })
HI(0, "dashboardCenter", { fg = "#C678DD" })
HI(0, "dashboardFooter", { fg = "#61AFEF" })
HI(0, "diffFile", { fg = "#948B60" })
HI(0, "diffLine", { fg = "#61AFEF" })
HI(0, "diffNewFile", { fg = "#948B60" })
HI(0, "htmlArg", { fg = "#C678DD" })
HI(0, "htmlBold", { fg = "#D19A66" })
HI(0, "htmlEndTag", { link = "htmlTag" })
HI(0, "htmlH1", { fg = "#E06C75" })
HI(0, "htmlH2", { link = "htmlH1" })
HI(0, "htmlH3", { link = "htmlH1" })
HI(0, "htmlH4", { link = "htmlH1" })
HI(0, "htmlH5", { link = "htmlH1" })
HI(0, "htmlH6", { link = "htmlH1" })
HI(0, "htmlItalic", { fg = "#C678DD" })
HI(0, "htmlLink", { fg = "#56B6C2" })
HI(0, "htmlSpecialChar", { link = "SpecialChar" })
HI(0, "htmlSpecialTagName", { fg = "#E06C75" })
HI(0, "htmlTag", { link = "TSTag" })
HI(0, "htmlTagN", { fg = "#E06C75" })
HI(0, "htmlTagName", { fg = "#E06C75" })
HI(0, "htmlTitle", { fg = "#ABB2BF" })
HI(0, "javaScriptFunction", { fg = "#C678DD" })
HI(0, "javaScriptIdentifier", { fg = "#C678DD" })
HI(0, "javaScriptNull", { fg = "#D19A66" })
HI(0, "javaScriptNumber", { link = "Number" })
HI(0, "javaScriptRequire", { fg = "#56B6C2" })
HI(0, "javaScriptReserved", { fg = "#C678DD" })
HI(0, "javascriptBraces", { fg = "#E06C75" })
HI(0, "jsArrowFunction", { fg = "#C678DD" })
HI(0, "jsClassKeyword", { link = "jsArrowFunction" })
HI(0, "jsClassMethodType", { link = "jsArrowFunction" })
HI(0, "jsDocParam", { fg = "#61AFEF" })
HI(0, "jsDocTags", { fg = "#C678DD" })
HI(0, "jsExport", { link = "jsArrowFunction" })
HI(0, "jsExtendsKeyword", { link = "jsClassKeyword" })
HI(0, "jsFrom", { link = "jsExport" })
HI(0, "jsFuncCall", { fg = "#61AFEF" })
HI(0, "jsFunction", { link = "jsArrowFunction" })
HI(0, "jsGenerator", { fg = "#E5C07B" })
HI(0, "jsGlobalObjects", { link = "jsGenerator" })
HI(0, "jsImport", { link = "jsExport" })
HI(0, "jsModuleAs", { link = "jsExport" })
HI(0, "jsModuleWords", { link = "jsExport" })
HI(0, "jsModules", { link = "jsExport" })
HI(0, "jsNull", { fg = "#D19A66" })
HI(0, "jsOperator", { fg = "#C678DD" })
HI(0, "jsStorageClass", { link = "jsClassKeyword" })
HI(0, "jsSuper", { fg = "#E06C75" })
HI(0, "jsTemplateBraces", { fg = "#E06C75" })
HI(0, "jsTemplateVar", { fg = "#98C379" })
HI(0, "jsThis", { fg = "#E06C75" })
HI(0, "jsUndefined", { fg = "#D19A66" })
HI(0, "jsonBoolean", { link = "Boolean" })
HI(0, "jsonCommentError", { fg = "#ABB2BF" })
HI(0, "jsonKeyword", { fg = "#E06C75" })
HI(0, "jsonMissingCommaError", { cterm = { reverse = true }, fg = "#E06C75", reverse = true })
HI(0, "jsonNoQuotesError", { link = "jsonMissingCommaError" })
HI(0, "jsonNumError", { link = "jsonMissingCommaError" })
HI(0, "jsonNumber", { link = "Number" })
HI(0, "jsonQuote", { fg = "#ABB2BF" })
HI(0, "jsonSemicolonError", { link = "jsonMissingCommaError" })
HI(0, "jsonString", { fg = "#98C379" })
HI(0, "jsonStringSQError", { link = "jsonMissingCommaError" })
HI(0, "lCursor", vim.empty_dict())
HI(0, "markdownBlockquote", { fg = "#5C6370" })
HI(0, "markdownBold", { fg = "#D19A66" })
HI(0, "markdownCode", { fg = "#98C379" })
HI(0, "markdownCodeBlock", { link = "markdownCode" })
HI(0, "markdownCodeDelimiter", { link = "markdownCode" })
HI(0, "markdownH1", { fg = "#E06C75" })
HI(0, "markdownH2", { link = "markdownH1" })
HI(0, "markdownH3", { link = "markdownH1" })
HI(0, "markdownH4", { link = "markdownH1" })
HI(0, "markdownH5", { link = "markdownH1" })
HI(0, "markdownH6", { link = "markdownH1" })
HI(0, "markdownHeadingDelimiter", { fg = "#E06C75" })
HI(0, "markdownHeadingRule", { link = "markdownBlockquote" })
HI(0, "markdownId", { fg = "#C678DD" })
HI(0, "markdownIdDeclaration", { fg = "#61AFEF" })
HI(0, "markdownIdDelimiter", { link = "markdownId" })
HI(0, "markdownItalic", { fg = "#C678DD" })
HI(0, "markdownLinkDelimiter", { fg = "#C678DD" })
HI(0, "markdownLinkText", { fg = "#61AFEF" })
HI(0, "markdownListMarker", { fg = "#E06C75" })
HI(0, "markdownOrderedListMarker", { link = "markdownListMarker" })
HI(0, "markdownRule", { link = "markdownBlockquote" })
HI(0, "markdownUrl", { fg = "#56B6C2" })
HI(0, "netrwBak", { link = "netrwGray" })
HI(0, "netrwClassify", { link = "Function" })
HI(0, "netrwCmdSep", { link = "Delimiter" })
HI(0, "netrwComma", { link = "netrwComment" })
HI(0, "netrwComment", { link = "Comment" })
HI(0, "netrwCompress", { link = "netrwGray" })
HI(0, "netrwCoreDump", { link = "WarningMsg" })
HI(0, "netrwData", { link = "Folded" })
HI(0, "netrwDateSep", { link = "Delimiter" })
HI(0, "netrwDir", { link = "Directory" })
HI(0, "netrwExe", { link = "PreProc" })
HI(0, "netrwGray", { link = "Folded" })
HI(0, "netrwHdr", { link = "netrwPlain" })
HI(0, "netrwHelpCmd", { link = "Function" })
HI(0, "netrwHide", { link = "netrwComment" })
HI(0, "netrwHidePat", { link = "Statement" })
HI(0, "netrwHideSep", { link = "netrwComment" })
HI(0, "netrwLex", { link = "netrwPlain" })
HI(0, "netrwLib", { link = "DiffChange" })
HI(0, "netrwLink", { link = "Special" })
HI(0, "netrwList", { link = "Statement" })
HI(0, "netrwMakefile", { link = "DiffChange" })
HI(0, "netrwMarkFile", { link = "TabLineSel" })
HI(0, "netrwObj", { link = "netrwGray" })
HI(0, "netrwPix", { link = "Special" })
HI(0, "netrwQHTopic", { link = "Number" })
HI(0, "netrwSpecFile", { link = "netrwGray" })
HI(0, "netrwSymLink", { link = "Question" })
HI(0, "netrwTags", { link = "netrwGray" })
HI(0, "netrwTilde", { link = "netrwGray" })
HI(0, "netrwTimeSep", { link = "netrwDateSep" })
HI(0, "netrwTmp", { link = "netrwGray" })
HI(0, "netrwTreeBar", { link = "Special" })
HI(0, "netrwVersion", { link = "Identifier" })
HI(0, "netrwYacc", { link = "netrwPlain" })
HI(0, "packerFail", { fg = "#E06C75" })
HI(0, "packerOutput", { fg = "#61AFEF" })
HI(0, "packerStatusFail", { fg = "#E06C75" })
HI(0, "IndentBlanklineContextStart", { cterm = { underline = true }, underline = true })
HI(0, "IndentBlanklineContextChar", { fg = "#C678DD" })
HI(0, "IndentBlanklineSpaceCharBlankline", { link = "IndentLine" })
HI(0, "IndentBlanklineSpaceChar", { link = "IndentLine" })
HI(0, "IndentBlanklineChar", { link = "IndentLine" })
HI(0, "TelescopePreviewDirectory", { link = "Directory" })
HI(0, "TelescopeMatching", { fg = "#98C379" })
HI(0, "TelescopeResultsDiffUntracked", { link = "NonText" })
HI(0, "TelescopeResultsDiffChange", { link = "DiffChange" })
HI(0, "TelescopeResultsDiffAdd", { link = "DiffAdd" })
HI(0, "TelescopeResultsDiffDelete", { link = "DiffDelete" })
HI(0, "TelescopePreviewTitle", { link = "TelescopeTitle" })
HI(0, "TelescopePreviewBorder", { link = "TelescopeBorder" })
HI(0, "StatusLineNC", { bg = "#2D313B", fg = "#ABB2BF" })
HI(0, "StatusLine", { bg = "#282C34", bold = true, cterm = { bold = true }, fg = "#ABB2BF" })
HI(0, "TelescopePromptNormal", { link = "TelescopeNormal" })
HI(0, "TelescopeResultsTitle", { link = "TelescopeTitle" })
HI(0, "TelescopeResultsBorder", { link = "TelescopeBorder" })
HI(0, "TelescopeResultsNormal", { link = "TelescopeNormal" })
HI(0, "lualine_a_inactive", { bg = "#282C34", bold = true, fg = "#828997" })
HI(0, "TelescopePromptPrefix", { fg = "#C678DD" })
HI(0, "lualine_a_visual", { bg = "#C678DD", bold = true, fg = "#282C34" })
HI(0, "lualine_a_replace", { bg = "#E06C75", bold = true, fg = "#282C34" })
HI(0, "lualine_a_terminal", { bg = "#56B6C2", bold = true, fg = "#282C34" })
HI(0, "lualine_a_insert", { bg = "#61AFEF", bold = true, fg = "#282C34" })
HI(0, "TelescopePromptCounter", { link = "NonText" })
HI(0, "lualine_b_normal", { bg = "#3E4452", fg = "#ABB2BF" })
HI(0, "lualine_a_normal", { bg = "#98C379", bold = true, fg = "#282C34" })
HI(0, "lualine_c_normal", { bg = "#2C323C", fg = "#ABB2BF" })
HI(0, "lualine_a_command", { bg = "#E5C07B", bold = true, fg = "#282C34" })
HI(0, "CopilotAnnotation", { link = "Comment" })
HI(0, "TelescopeResultsField", { link = "Function" })
HI(0, "TelescopeResultsMethod", { link = "Method" })
HI(0, "TelescopeResultsOperator", { link = "Operator" })
HI(0, "TelescopeResultsStruct", { link = "Struct" })
HI(0, "TelescopeResultsClass", { link = "Function" })
HI(0, "Title", { fg = "#98C379" })
HI(0, "Character", { fg = "#98C379" })
HI(0, "WhichKey", { fg = "#C678DD" })
HI(0, "FidgetTitle", { link = "Title" })
HI(0, "lualine_transitional_lualine_a_insert_to_lualine_c_diagnostics_error", { fg = "#61AFEF" })
HI(0, "ErrorMsg", { fg = "#E06C75" })
HI(0, "@attribute", { fg = "#C678DD" })
HI(0, "@boolean", { link = "Boolean" })
HI(0, "@character", { link = "Character" })
HI(0, "@character.special", { fg = "#C678DD" })
HI(0, "@comment", { link = "Comment" })
HI(0, "@conditional", { fg = "#C678DD" })
HI(0, "@conditional.python", { fg = "#C678DD" })
HI(0, "@constant", { fg = "#D19A66" })
HI(0, "@constant.builtin", { fg = "#C678DD" })
HI(0, "@constant.builtin.php", { fg = "#D19A66" })
HI(0, "@constant.builtin.python", { fg = "#D19A66" })
HI(0, "@constant.builtin.rust", { fg = "#E5C07B" })
HI(0, "@constant.comment", { fg = "#C678DD" })
HI(0, "@constant.go", { fg = "#E06C75" })
HI(0, "@constant.macro", { link = "@constant" })
HI(0, "@constructor", { fg = "#E5C07B" })
HI(0, "@constructor.javascript", { fg = "#E5C07B" })
HI(0, "@debug", { link = "Debug" })
HI(0, "@define", { link = "Define" })
HI(0, "@error", { link = "Error" })
HI(0, "@exception", { link = "Exception" })
HI(0, "@field", { fg = "#ABB2BF" })
HI(0, "@field.go", { fg = "#E06C75" })
HI(0, "@field.lua", { fg = "#ABB2BF" })
HI(0, "@field.rust", { fg = "#E06C75" })
HI(0, "@field.yaml", { fg = "#E06C75" })
HI(0, "@float", { link = "Float" })
HI(0, "@function", { fg = "#61AFEF" })
HI(0, "@function.builtin", { fg = "#E5C07B" })
HI(0, "@function.builtin.go", { fg = "#56B6C2" })
HI(0, "@function.builtin.lua", { fg = "#56B6C2" })
HI(0, "@function.builtin.php", { fg = "#56B6C2" })
HI(0, "@function.call", { link = "@function" })
HI(0, "@function.call.go", { fg = "#61AFEF" })
HI(0, "@function.call.lua", { fg = "#61AFEF" })
HI(0, "@function.call.ruby", { fg = "#61AFEF" })
HI(0, "@function.call.tsx", { fg = "#61AFEF" })
HI(0, "@function.call.typescript", { fg = "#61AFEF" })
HI(0, "@function.call.yaml", { fg = "#98C379" })
HI(0, "@function.macro", { fg = "#61AFEF" })
HI(0, "@function.macro.rust", { link = "Function" })
HI(0, "@function.ruby", { fg = "#61AFEF" })
HI(0, "@function.tsx", { fg = "#61AFEF" })
HI(0, "@function.typescript", { fg = "#61AFEF" })
HI(0, "@include", { link = "Include" })
HI(0, "@include.python", { fg = "#ABB2BF" })
HI(0, "@include.ruby", { fg = "#61AFEF" })
HI(0, "@keyword", { link = "Keyword" })
HI(0, "@keyword.function", { fg = "#C678DD" })
HI(0, "@keyword.function.ruby", { link = "@keyword.ruby" })
HI(0, "@keyword.javascript", { fg = "#C678DD" })
HI(0, "@keyword.lua", { fg = "#C678DD" })
HI(0, "@keyword.operator", { fg = "#C678DD" })
HI(0, "@keyword.operator.lua", { fg = "#ABB2BF" })
HI(0, "@keyword.return", { link = "@keyword" })
HI(0, "@keyword.return.javascript", { fg = "#C678DD" })
HI(0, "@label", { link = "Label" })
HI(0, "@label.ruby", { fg = "#E06C75" })
HI(0, "@lsp.mod.defaultLibrary.typescript", { fg = "#E5C07B" })
HI(0, "@lsp.mod.readonly.typescript", { fg = "#E5C07B" })
HI(0, "@lsp.type.class", { fg = "#E5C07B" })
HI(0, "@lsp.type.class.javascript", { fg = "#E5C07B" })
HI(0, "@lsp.type.class.lua", { fg = "#E5C07B" })
HI(0, "@lsp.type.comment", { link = "Comment" })
HI(0, "@lsp.type.comment.lua", { link = "Comment" })
HI(0, "@lsp.type.decorator", { link = "Function" })
HI(0, "@lsp.type.enum", { link = "@type" })
HI(0, "@lsp.type.enum.typescript", { fg = "#E5C07B" })
HI(0, "@lsp.type.enumMember", { fg = "#56B6C2" })
HI(0, "@lsp.type.function", { link = "Function" })
HI(0, "@lsp.type.interface", { fg = "#E5C07B" })
HI(0, "@lsp.type.interface.typescript", { fg = "#E5C07B" })
HI(0, "@lsp.type.keyword", { link = "@keyword" })
HI(0, "@lsp.type.macro", { link = "Macro" })
HI(0, "@lsp.type.member.javascript", { fg = "#61AFEF" })
HI(0, "@lsp.type.method", { link = "Function" })
HI(0, "@lsp.type.namespace", { link = "@namespace" })
HI(0, "@lsp.type.namespace.javascript", { fg = "#E5C07B" })
HI(0, "@lsp.type.parameter", { link = "@parameter" })
HI(0, "@lsp.type.property", { link = "@property" })
HI(0, "@lsp.type.struct", { link = "Structure" })
HI(0, "@lsp.type.type", { link = "Type" })
HI(0, "@lsp.type.typeParameter", { link = "Typedef" })
HI(0, "@lsp.type.variable", { link = "@variable" })
HI(0, "@lsp.typemod.enumMember.declaration.typescript", { fg = "#56B6C2" })
HI(0, "@lsp.typemod.enumMember.readonly.typescript", { fg = "#56B6C2" })
HI(0, "@lsp.typemod.function.defaultLibrary", { link = "@function.builtin" })
HI(0, "@lsp.typemod.function.defaultLibrary.lua", { fg = "#56B6C2" })
HI(0, "@lsp.typemod.member.defaultLibrary.typescript", { link = "@function.typescript" })
HI(0, "@lsp.typemod.method.defaultLibrary", { link = "@function.builtin" })
HI(0, "@lsp.typemod.variable.defaultLibrary", { link = "@variable.builtin" })
HI(0, "@lsp.typemod.variable.defaultLibrary.javascript", { fg = "#E5C07B" })
HI(0, "@lsp.typemod.variable.defaultLibrary.lua", { fg = "#E5C07B" })
HI(0, "@lsp.typemod.variable.readonly", { link = "@constant" })
HI(0, "@macro", { link = "Macro" })
HI(0, "@method", { fg = "#61AFEF" })
HI(0, "@method.call", { link = "@method" })
HI(0, "@method.call.go", { fg = "#61AFEF" })
HI(0, "@method.call.javascript", { link = "@method.javascript" })
HI(0, "@method.call.php", { link = "@method.php" })
HI(0, "@method.call.python", { fg = "#61AFEF" })
HI(0, "@method.call.typescript", { fg = "#61AFEF" })
HI(0, "@method.javascript", { fg = "#61AFEF" })
HI(0, "@method.lua", { fg = "#61AFEF" })
HI(0, "@method.php", { fg = "#61AFEF" })
HI(0, "@method.typescript", { fg = "#61AFEF" })
HI(0, "@method.vue", { fg = "#D19A66" })
HI(0, "@namespace", { fg = "#E5C07B" })
HI(0, "@namespace.php", { fg = "#E5C07B" })
HI(0, "@number", { link = "Number" })
HI(0, "NullLsInfoSources", { link = "Title" })
HI(0, "NullLsInfoTitle", { link = "Type" })
HI(0, "NullLsInfoHeader", { link = "Label" })
HI(0, "NullLsInfoBorder", { link = "NormalFloat" })
HI(0, "GitSignsStagedChangedeleteNr", { bg = "#8B008B" })
HI(0, "GitSignsStagedChangedeleteLn", { bg = "#8B008B" })
HI(0, "GitSignsStagedChangedelete", { bg = "#8B008B" })
HI(0, "GitSignsStagedTopdeleteNr", { bg = "#008B8B", fg = "#00007F" })
HI(0, "GitSignsStagedTopdelete", { bg = "#008B8B", fg = "#00007F" })
HI(0, "GitSignsStagedDeleteNr", { bg = "#008B8B", fg = "#00007F" })
HI(0, "GitSignsStagedDelete", { bg = "#008B8B", fg = "#00007F" })
HI(0, "GitSignsStagedChangeNr", { bg = "#8B008B" })
HI(0, "GitSignsStagedChangeLn", { bg = "#8B008B" })
HI(0, "GitSignsStagedChange", { bg = "#8B008B" })
HI(0, "GitSignsStagedAddNr", { bg = "#00008B" })
HI(0, "GitSignsStagedAddLn", { bg = "#00008B" })
HI(0, "GitSignsStagedAdd", { bg = "#00008B" })
HI(0, "GitSignsUntrackedNr", { link = "GitSignsAddNr" })
HI(0, "GitSignsUntrackedLn", { link = "GitSignsAddLn" })
HI(0, "GitSignsUntracked", { fg = "#61AFEF" })
HI(0, "GitSignsChangedeleteNr", { link = "GitSignsChangeNr" })
HI(0, "GitSignsChangedeleteLn", { link = "GitSignsChangeLn" })
HI(0, "GitSignsChangedelete", { link = "GitSignsChange" })
HI(0, "GitSignsTopdeleteNr", { link = "GitSignsDeleteNr" })
HI(0, "GitSignsTopdelete", { link = "GitSignsDelete" })
HI(0, "GitSignsDeleteNr", { link = "GitSignsDelete" })
HI(0, "TelescopeBorder", { bg = "#21252B", fg = "#5C6370" })
HI(0, "GitSignsDelete", { fg = "#9A353D" })
HI(0, "GitSignsChangeNr", { link = "GitSignsChange" })
HI(0, "GitSignsChangeLn", { link = "DiffChange" })
HI(0, "BufferInactiveIndex", { link = "BufferInactive" })
HI(0, "BufferInactiveMod", { link = "BufferInactive" })
HI(0, "BufferInactiveSign", { fg = "#282C34" })
HI(0, "BufferInactiveTarget", { link = "BufferCurrentTarget" })
HI(0, "BufferTabpageFill", { fg = "#282C34" })
HI(0, "BufferTabpages", { fg = "#C678DD" })
HI(0, "BufferVisible", { fg = "#5C6370" })
HI(0, "BufferVisibleIcon", { link = "BufferVisibleMod" })
HI(0, "BufferVisibleIndex", { link = "BufferVisible" })
HI(0, "BufferVisibleMod", { link = "BufferVisible" })
HI(0, "BufferVisibleSign", { link = "BufferVisibleMod" })
HI(0, "BufferVisibleTarget", { link = "BufferCurrentTarget" })
HI(0, "CmpDocumentation", { fg = "#ABB2BF" })
HI(0, "CmpDocumentationBorder", { fg = "#ABB2BF" })
HI(0, "CmpItemKindClass", { fg = "#E5C07B" })
HI(0, "TelescopeResultsSpecialComment", { link = "SpecialComment" })
HI(0, "CmpItemKindColor", { link = "CmpItemKindColorDefault" })
HI(0, "CmpItemKindConstant", { fg = "#98C379" })
HI(0, "CmpItemKindConstructor", { fg = "#E5C07B" })
HI(0, "CmpItemKindEnum", { fg = "#E5C07B" })
HI(0, "WilderAccent", { bg = "#21252B", fg = "#F4468F" })
HI(0, "CmpItemKindEnumMember", { fg = "#56B6C2" })
HI(0, "CmpItemKindEvent", { link = "CmpItemKindEventDefault" })
HI(0, "CmpItemKindField", { fg = "#61AFEF" })
HI(0, "PmenuThumb", { bg = "#0D0F11" })
HI(0, "CmpItemKindFile", { fg = "#61AFEF" })
HI(0, "CmpItemKindFolder", { link = "CmpItemKindFolderDefault" })
HI(0, "CmpItemKindFunction", { link = "CmpItemKindMethod" })
HI(0, "CmpItemKindInterface", { link = "CmpItemKindClass" })
HI(0, "CmpItemKindKeyword", { fg = "#C678DD" })
HI(0, "CmpItemKindMethod", { fg = "#61AFEF" })
HI(0, "CmpItemKindModule", { fg = "#61AFEF" })
HI(0, "CmpItemKindOperator", { link = "CmpItemKindOperatorDefault" })
HI(0, "CmpItemKindProperty", { fg = "#61AFEF" })
HI(0, "CmpItemKindReference", { link = "CmpItemKindReferenceDefault" })
HI(0, "CmpItemKindSnippet", { fg = "#98C379" })
HI(0, "DiagnosticHint", { fg = "#56B6C2" })
HI(0, "DiagnosticError", { fg = "#E06C75" })
HI(0, "DiagnosticWarn", { fg = "#E5C07B" })
HI(0, "CmpItemKindText", { fg = "#D19A66" })
HI(0, "CmpItemKindTypeParameter", { fg = "#E5C07B" })
HI(0, "CmpItemKindUnit", { link = "CmpItemKindUnitDefault" })
HI(0, "CmpItemKindValue", { fg = "#D19A66" })
HI(0, "CmpItemKindVariable", { link = "CmpItemKindVariableDefault" })
HI(0, "ColorColumn", { bg = "#2D313B" })
HI(0, "Conceal", { fg = "#ABB2BF" })
HI(0, "Conditional", { fg = "#C678DD" })
HI(0, "Cursor", { bg = "#C678DD", fg = "#282C34" })
HI(0, "CursorColumn", { bg = "#5C6370" })
HI(0, "CursorLine", { bg = "#282C34" })
HI(0, "CursorLineFold", { link = "FoldColumn" })
HI(0, "CursorLineNr", { bg = "#282C34", fg = "#C678DD" })
HI(0, "CursorLineNrNC", { bg = "#2D313B", fg = "#5C6370" })
HI(0, "CursorLineNrNCQuickFix", { bg = "#282C34", fg = "#C678DD" })
HI(0, "CursorLineSign", { link = "SignColumn" })
HI(0, "DapUIBreakpointsCurrentLine", { fg = "#E5C07B" })
HI(0, "DapUIBreakpointsInfo", { fg = "#ABB2BF" })
HI(0, "DapUIBreakpointsLine", { link = "DapUIBreakpointsCurrentLine" })
HI(0, "DapUIBreakpointsPath", { bg = "#E5C07B", fg = "#282C34" })
HI(0, "DapUIDecoration", { fg = "#61AFEF" })
HI(0, "DapUIFloatBorder", { bg = "#282C34", fg = "#5C6370" })
HI(0, "DapUIFrameName", { fg = "#ABB2BF" })
HI(0, "DapUILineNumber", { fg = "#5C6370" })
HI(0, "DapUIModifiedValue", { fg = "#56B6C2" })
HI(0, "DapUIScope", { bg = "#61AFEF", fg = "#282C34" })
HI(0, "DapUISource", { fg = "#C678DD" })
HI(0, "DapUIStoppedThread", { bg = "#C678DD", fg = "#282C34" })
HI(0, "DapUIThread", { fg = "#C678DD" })
HI(0, "DapUIType", { fg = "#61AFEF" })
HI(0, "DapUIWatchesEmpty", { bg = "#E06C75", fg = "#282C34" })
HI(0, "DapUIWatchesError", { fg = "#E06C75" })
HI(0, "DapUIWatchesValue", { fg = "#E06C75" })
HI(0, "Debug", { link = "Special" })
HI(0, "DebugBreakpoint", { fg = "#E06C75" })
HI(0, "DebugBreakpointLine", { fg = "#E06C75" })
HI(0, "DebugHighlight", { fg = "#61AFEF" })
HI(0, "DebugHighlightLine", { fg = "#C678DD" })
HI(0, "Define", { fg = "#C678DD" })
HI(0, "DefinitionCount", { link = "Title" })
HI(0, "DefinitionIcon", { link = "Special" })
HI(0, "DefinitionPreviewTitle", { link = "Title" })
HI(0, "Delimiter", { fg = "#ABB2BF" })
HI(0, "DiagnosticFloatingOk", { link = "DiagnosticOk" })
HI(0, "DiagnosticOk", { ctermfg = 10, fg = "#90EE90" })
HI(0, "DiagnosticSignOk", { link = "DiagnosticOk" })
HI(0, "DiagnosticTruncateLine", { link = "NormalNC" })
HI(0, "DiagnosticUnderlineOk", { cterm = { underline = true }, sp = "#90EE90", underline = true })
HI(0, "DiagnosticVirtualTextOk", { link = "DiagnosticOk" })
HI(0, "Directory", { fg = "#61AFEF" })
HI(0, "EndOfBuffer", { fg = "#282C34" })
HI(0, "Exception", { link = "Keyword" })
HI(0, "FidgetTask", { link = "NonText" })
HI(0, "FloatShadow", { bg = "#000000", blend = 80 })
HI(0, "FloatShadowThrough", { bg = "#000000", blend = 100 })
HI(0, "FloatTitle", { link = "Title" })
HI(0, "FoldColumn", { bg = "#282C34", fg = "#495162" })
HI(0, "Folded", { bg = "#30333D", fg = "#5C6370" })
HI(0, "FoldedNC", { bg = "#2D313B", fg = "#5C6370" })
HI(0, "GitSignsAddCursorLine", { fg = "#109868" })
HI(0, "GitSignsChangeCursorLine", { fg = "#948B60" })
HI(0, "GitSignsDeleteCursorLine", { fg = "#9A353D" })
HI(0, "GitSignsUntrackedCursorLine", { fg = "#61AFEF" })
HI(0, "HlSearchFloat", { link = "HlSearchNear" })
HI(0, "HlSearchLens", { bg = "#5C6370" })
HI(0, "HlSearchLensNear", { link = "HlSearchNear" })
HI(0, "HlSearchNear", { bg = "#E2BE7D", fg = "#282C34" })
HI(0, "HopCursor", { link = "Cursor" })
HI(0, "HopNextKey", { bg = "#98C379", fg = "#282C34" })
HI(0, "HopNextKey1", { bg = "#E5C07B", fg = "#282C34" })
HI(0, "HopNextKey2", { link = "HopNextKey1" })
HI(0, "HopUnmatched", { fg = "#5C6370" })
HI(0, "Ignore", { ctermfg = 0 })
HI(0, "Include", { fg = "#C678DD" })
HI(0, "IndentBlanklineIndent1", { fg = "#414559", nocombine = true })
HI(0, "IndentBlanklineIndent10", { fg = "#BABBF1", nocombine = true })
HI(0, "IndentBlanklineIndent11", { fg = "#8CAAEE", nocombine = true })
HI(0, "IndentBlanklineIndent12", { fg = "#85C1DC", nocombine = true })
HI(0, "IndentBlanklineIndent13", { fg = "#99D1DB", nocombine = true })
HI(0, "IndentBlanklineIndent14", { fg = "#81C8BE", nocombine = true })
HI(0, "IndentBlanklineIndent15", { fg = "#A6D189", nocombine = true })
HI(0, "IndentBlanklineIndent16", { fg = "#E5C890", nocombine = true })
HI(0, "IndentBlanklineIndent17", { fg = "#EF9F76", nocombine = true })
HI(0, "IndentBlanklineIndent18", { fg = "#EA999C", nocombine = true })
HI(0, "IndentBlanklineIndent19", { fg = "#E78284", nocombine = true })
HI(0, "IndentBlanklineIndent2", { fg = "#51576D", nocombine = true })
HI(0, "IndentBlanklineIndent20", { fg = "#CA9EE6", nocombine = true })
HI(0, "IndentBlanklineIndent21", { fg = "#F4B8E4", nocombine = true })
HI(0, "IndentBlanklineIndent22", { fg = "#EEBEBE", nocombine = true })
HI(0, "IndentBlanklineIndent23", { fg = "#F2D5CF", nocombine = true })
HI(0, "IndentBlanklineIndent3", { fg = "#626880", nocombine = true })
HI(0, "IndentBlanklineIndent4", { fg = "#737994", nocombine = true })
HI(0, "IndentBlanklineIndent5", { fg = "#838BA7", nocombine = true })
HI(0, "IndentBlanklineIndent6", { fg = "#949CBB", nocombine = true })
HI(0, "IndentBlanklineIndent7", { fg = "#A5ADCE", nocombine = true })
HI(0, "IndentBlanklineIndent8", { fg = "#B5BFE2", nocombine = true })
HI(0, "IndentBlanklineIndent9", { fg = "#C6D0F5", nocombine = true })
HI(0, "IndentLine", { fg = "#3B4048" })
HI(0, "LeapLabelPrimary", { bg = "#98C379", fg = "#282C34" })
HI(0, "LeapLabelSecondary", { bg = "#56B6C2", fg = "#282C34" })
HI(0, "LeapLabelSelected", { bg = "#D19A66", fg = "#282C34" })
HI(0, "LeapMatch", { bg = "#C678DD", fg = "#282C34" })
HI(0, "LineDiagTuncateLine", { link = "NormalNC" })
HI(0, "LineNr", { bg = "#282C34", fg = "#495162" })
HI(0, "LineNrAbove", { link = "LineNr" })
HI(0, "LineNrBelow", { link = "LineNr" })
HI(0, "LineNrNC", { bg = "#2D313B", fg = "#495162" })
HI(0, "LspDiagnosticsSignError", { link = "DiagnosticSignError" })
HI(0, "LspDiagnosticsSignHint", { link = "DiagnosticSignHint" })
HI(0, "LspDiagnosticsSignInformation", { link = "DiagnosticSignInfo" })
HI(0, "LspDiagnosticsSignWarning", { link = "DiagnosticSignWarn" })
HI(0, "LspDiagnosticsUnderlineError", { link = "DiagnosticUnderlineError" })
HI(0, "LspDiagnosticsUnderlineHint", { link = "DiagnosticUnderlineHint" })
HI(0, "LspDiagnosticsUnderlineInformating", { link = "DiagnosticUnderlineInfo" })
HI(0, "LspDiagnosticsUnderlineWarning", { link = "DiagnosticUnderlineWarn" })
HI(0, "LspDiagnosticsVirtualTextError", { link = "DiagnosticVirtualTextError" })
HI(0, "LspDiagnosticsVirtualTextHint", { link = "DiagnosticVirtualTextHint" })
HI(0, "LspDiagnosticsVirtualTextInformation", { link = "DiagnosticVirtualTextInfo" })
HI(0, "LspDiagnosticsVirtualTextWarning", { link = "DiagnosticVirtualTextWarn" })
HI(0, "LspFloatWinBorder", { link = "NormalNC" })
HI(0, "LspInfoBorder", { link = "Label" })
HI(0, "LspInfoFiletype", { link = "Type" })
HI(0, "LspInfoList", { link = "Function" })
HI(0, "LspInfoTip", { link = "Comment" })
HI(0, "LspInfoTitle", { link = "Title" })
HI(0, "LspSagaBorderTitle", { link = "Title" })
HI(0, "LspSagaCodeActionContent", { link = "Normal" })
HI(0, "Label", { fg = "#C678DD" })
HI(0, "Whitespace", { fg = "#5C6370" })
HI(0, "Statement", { fg = "#C678DD" })
HI(0, "Special", { fg = "#61AFEF" })
HI(0, "WarningMsg", { fg = "#E5C07B" })
HI(0, "Normal", { bg = "#282C34", fg = "#ABB2BF" })
HI(0, "Function", { fg = "#61AFEF" })
HI(0, "LspSagaCodeActionTitle", { link = "Title" })
HI(0, "LspSagaCodeActionTruncateLine", { link = "NormalNC" })
HI(0, "LspSagaDiagnosticBorder", { link = "NormalNC" })
HI(0, "LspSagaDiagnosticHeader", { fg = "#C678DD" })
HI(0, "LspSagaDiagnosticTruncateLine", { link = "NormalNC" })
HI(0, "LspSagaDocTruncateLine", { link = "NormalNC" })
HI(0, "LspSagaFinderSelection", { link = "Search" })
HI(0, "LspSagaRenamePromptPrefix", { fg = "#C678DD" })
HI(0, "LspSagaShTruncateLine", { link = "NormalNC" })
HI(0, "Macro", { fg = "#61AFEF" })
HI(0, "MarkSignHL", { fg = "#C678DD" })
HI(0, "MarkVirtTextHL", { fg = "#5C6370" })
HI(0, "MatchParen", { fg = "#56B6C2" })
HI(0, "ModeMsg", { link = "Normal" })
HI(0, "MsgArea", { link = "ModeMsg" })
HI(0, "Constant", { fg = "#D19A66" })
HI(0, "NavicIconsBoolean", { fg = "#D19A66" })
HI(0, "NavicIconsClass", { fg = "#C678DD" })
HI(0, "NavicIconsConstant", { fg = "#D19A66" })
HI(0, "NavicIconsFunction", { fg = "#61AFEF" })
HI(0, "NavicIconsObject", { fg = "#C678DD" })
HI(0, "NavicIconsProperty", { fg = "#ABB2BF" })
HI(0, "NavicIconsString", { fg = "#98C379" })
HI(0, "NavicIconsVariable", { fg = "#D19A66" })
HI(0, "NavicSeparator", { fg = "#5C6370" })
HI(0, "NavicText", { fg = "#5C6370" })
HI(0, "NeoTreeDirectoryIcon", { fg = "#C678DD" })
HI(0, "NeoTreeDirectoryName", { fg = "#61AFEF" })
HI(0, "NeoTreeFileIcon", { fg = "#61AFEF" })
HI(0, "NeoTreeFileName", { fg = "#ABB2BF" })
HI(0, "NeoTreeFileNameOpened", { fg = "#C678DD" })
HI(0, "NeoTreeFloatTitle", { bg = "#C678DD", fg = "#282C34" })
HI(0, "NeoTreeGitAdded", { fg = "#98C379" })
HI(0, "NeoTreeGitConflict", { fg = "#61AFEF" })
HI(0, "NeoTreeGitDeleted", { fg = "#E06C75" })
HI(0, "NeoTreeGitIgnored", { fg = "#5C6370" })
HI(0, "IncSearch", { bg = "#414858", fg = "#E5C07B" })
HI(0, "NeoTreeGitUntracked", { fg = "#5C6370" })
HI(0, "NeoTreeIndentMarker", { fg = "#5C6370" })
HI(0, "NeoTreeModified", { fg = "#E06C75" })
HI(0, "NeoTreeNormalNC", { bg = "#2D313B" })
HI(0, "NeoTreeRootName", { fg = "#C678DD" })
HI(0, "NeoTreeSymbolicLinkTarget", { fg = "#56B6C2" })
HI(0, "NeoTreeTitleBar", { bg = "#C678DD", fg = "#282C34" })
HI(0, "NeotestAdapterName", { fg = "#C678DD" })
HI(0, "NeotestDir", { fg = "#56B6C2" })
HI(0, "NeotestExpandMarker", { fg = "#5C6370" })
HI(0, "NeotestFailed", { fg = "#E06C75" })
HI(0, "NeotestFile", { fg = "#56B6C2" })
HI(0, "NeotestFocused", vim.empty_dict())
HI(0, "NeotestIndent", { fg = "#ABB2BF" })
HI(0, "NeotestNamespace", { fg = "#61AFEF" })
HI(0, "NeotestPassed", { fg = "#98C379" })
HI(0, "NeotestRunning", { fg = "#E5C07B" })
HI(0, "NeotestSkipped", { fg = "#56B6C2" })
HI(0, "NormalNC", { bg = "#2D313B", fg = "#ABB2BF" })
HI(0, "NotifyDEBUGBorder", { fg = "#C678DD" })
HI(0, "NotifyDEBUGIcon", { fg = "#C678DD" })
HI(0, "NotifyDEBUGTitle", { fg = "#C678DD" })
HI(0, "NotifyERRORBorder", { fg = "#E06C75" })
HI(0, "NotifyERRORIcon", { fg = "#E06C75" })
HI(0, "NotifyERRORTitle", { fg = "#E06C75" })
HI(0, "NotifyINFOBorder", { fg = "#61AFEF" })
HI(0, "NotifyINFOIcon", { fg = "#61AFEF" })
HI(0, "NotifyINFOTitle", { fg = "#61AFEF" })
HI(0, "NotifyTRACEBorder", { fg = "#D19A66" })
HI(0, "NotifyTRACEIcon", { fg = "#D19A66" })
HI(0, "NotifyTRACETitle", { fg = "#D19A66" })
HI(0, "NotifyWARNBorder", { fg = "#E5C07B" })
HI(0, "NotifyWARNIcon", { fg = "#E5C07B" })
HI(0, "NotifyWARNTitle", { fg = "#E5C07B" })
HI(0, "NvimAnd", { link = "NvimBinaryOperator" })
HI(0, "NvimArrow", { link = "Delimiter" })
HI(0, "NvimAssignment", { link = "Operator" })
HI(0, "NvimAssignmentWithAddition", { link = "NvimAugmentedAssignment" })
HI(0, "NvimAssignmentWithConcatenation", { link = "NvimAugmentedAssignment" })
HI(0, "NvimAssignmentWithSubtraction", { link = "NvimAugmentedAssignment" })
HI(0, "NvimAugmentedAssignment", { link = "NvimAssignment" })
HI(0, "NvimBinaryMinus", { link = "NvimBinaryOperator" })
HI(0, "NvimBinaryOperator", { link = "NvimOperator" })
HI(0, "NvimBinaryPlus", { link = "NvimBinaryOperator" })
HI(0, "NvimCallingParenthesis", { link = "NvimParenthesis" })
HI(0, "NvimColon", { link = "Delimiter" })
HI(0, "NvimComma", { link = "Delimiter" })
HI(0, "NvimComparison", { link = "NvimBinaryOperator" })
HI(0, "NvimComparisonModifier", { link = "NvimComparison" })
HI(0, "NvimConcat", { link = "NvimBinaryOperator" })
HI(0, "NvimConcatOrSubscript", { link = "NvimConcat" })
HI(0, "NvimContainer", { link = "NvimParenthesis" })
HI(0, "NvimCurly", { link = "NvimSubscript" })
HI(0, "NvimDapVirtualText", { fg = "#56B6C2" })
HI(0, "NvimDict", { link = "NvimContainer" })
HI(0, "NvimDivision", { link = "NvimBinaryOperator" })
HI(0, "NvimDoubleQuote", { link = "NvimStringQuote" })
HI(0, "NvimDoubleQuotedBody", { link = "NvimStringBody" })
HI(0, "NvimDoubleQuotedEscape", { link = "NvimStringSpecial" })
HI(0, "NvimDoubleQuotedUnknownEscape", { link = "NvimInvalidValue" })
HI(0, "NvimEnvironmentName", { link = "NvimIdentifier" })
HI(0, "NvimEnvironmentSigil", { link = "NvimOptionSigil" })
HI(0, "NvimFigureBrace", { link = "NvimInternalError" })
HI(0, "NvimFloat", { link = "NvimNumber" })
HI(0, "NvimIdentifier", { link = "Identifier" })
HI(0, "NvimIdentifierKey", { link = "NvimIdentifier" })
HI(0, "NvimIdentifierName", { link = "NvimIdentifier" })
HI(0, "NvimIdentifierScope", { link = "NvimIdentifier" })
HI(0, "NvimIdentifierScopeDelimiter", { link = "NvimIdentifier" })
HI(0, "NvimInternalError", { bg = "#FF0000", ctermbg = 9, ctermfg = 9, fg = "#FF0000" })
HI(0, "NvimInvalid", { link = "Error" })
HI(0, "NvimInvalidAnd", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidArrow", { link = "NvimInvalidDelimiter" })
HI(0, "NvimInvalidAssignment", { link = "NvimInvalid" })
HI(0, "NvimInvalidAssignmentWithAddition", { link = "NvimInvalidAugmentedAssignment" })
HI(0, "NvimInvalidAssignmentWithConcatenation", { link = "NvimInvalidAugmentedAssignment" })
HI(0, "NvimInvalidAssignmentWithSubtraction", { link = "NvimInvalidAugmentedAssignment" })
HI(0, "NvimInvalidAugmentedAssignment", { link = "NvimInvalidAssignment" })
HI(0, "NvimInvalidBinaryMinus", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidBinaryOperator", { link = "NvimInvalidOperator" })
HI(0, "NvimInvalidBinaryPlus", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidCallingParenthesis", { link = "NvimInvalidParenthesis" })
HI(0, "NvimInvalidColon", { link = "NvimInvalidDelimiter" })
HI(0, "NvimInvalidComma", { link = "NvimInvalidDelimiter" })
HI(0, "NvimInvalidComparison", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidComparisonModifier", { link = "NvimInvalidComparison" })
HI(0, "NvimInvalidConcat", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidConcatOrSubscript", { link = "NvimInvalidConcat" })
HI(0, "NvimInvalidContainer", { link = "NvimInvalidParenthesis" })
HI(0, "NvimInvalidCurly", { link = "NvimInvalidSubscript" })
HI(0, "NvimInvalidDelimiter", { link = "NvimInvalid" })
HI(0, "NvimInvalidDict", { link = "NvimInvalidContainer" })
HI(0, "NvimInvalidDivision", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidDoubleQuote", { link = "NvimInvalidStringQuote" })
HI(0, "NvimInvalidDoubleQuotedBody", { link = "NvimInvalidStringBody" })
HI(0, "NvimInvalidDoubleQuotedEscape", { link = "NvimInvalidStringSpecial" })
HI(0, "NvimInvalidDoubleQuotedUnknownEscape", { link = "NvimInvalidValue" })
HI(0, "NvimInvalidEnvironmentName", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidEnvironmentSigil", { link = "NvimInvalidOptionSigil" })
HI(0, "NvimInvalidFigureBrace", { link = "NvimInvalidDelimiter" })
HI(0, "NvimInvalidFloat", { link = "NvimInvalidNumber" })
HI(0, "NvimInvalidIdentifier", { link = "NvimInvalidValue" })
HI(0, "NvimInvalidIdentifierKey", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidIdentifierName", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidIdentifierScope", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidIdentifierScopeDelimiter", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidLambda", { link = "NvimInvalidParenthesis" })
HI(0, "NvimInvalidList", { link = "NvimInvalidContainer" })
HI(0, "NvimInvalidMod", { link = "NvimInvalidBinaryOperator" })
HI(0, "Number", { fg = "#D19A66" })
HI(0, "Boolean", { fg = "#D19A66" })
HI(0, "NvimInvalidNot", { link = "NvimInvalidUnaryOperator" })
HI(0, "NvimInvalidNumber", { link = "NvimInvalidValue" })
HI(0, "NvimInvalidNumberPrefix", { link = "NvimInvalidNumber" })
HI(0, "NvimInvalidOperator", { link = "NvimInvalid" })
HI(0, "NvimInvalidOptionName", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidOptionScope", { link = "NvimInvalidIdentifierScope" })
HI(0, "NvimInvalidOptionScopeDelimiter", { link = "NvimInvalidIdentifierScopeDelimiter" })
HI(0, "NvimInvalidOptionSigil", { link = "NvimInvalidIdentifier" })
HI(0, "NvimInvalidOr", { link = "NvimInvalidBinaryOperator" })
HI(0, "NvimInvalidParenthesis", { link = "NvimInvalidDelimiter" })
HI(0, "NvimInvalidPlainAssignment", { link = "NvimInvalidAssignment" })
HI(0, "NvimInvalidRegister", { link = "NvimInvalidValue" })
HI(0, "NvimInvalidSingleQuote", { link = "NvimInvalidStringQuote" })
HI(0, "NvimInvalidSingleQuotedBody", { link = "NvimInvalidStringBody" })
HI(0, "NvimInvalidSingleQuotedQuote", { link = "NvimInvalidStringSpecial" })
HI(0, "NvimInvalidSingleQuotedUnknownEscape", { link = "NvimInternalError" })
HI(0, "GitSignsDeleteLnInline", { link = "GitSignsDeleteInline" })
HI(0, "GitSignsChangeLnInline", { link = "GitSignsChangeInline" })
HI(0, "GitSignsAddLnInline", { link = "GitSignsAddInline" })
HI(0, "GitSignsDeleteVirtLn", { link = "DiffDelete" })
HI(0, "GitSignsDeleteInline", { bg = "#6F2E2D" })
HI(0, "GitSignsChangeInline", { bg = "#41483D" })
HI(0, "GitSignsAddInline", { bg = "#3F534F" })
HI(0, "GitSignsAddPreview", { bg = "#43554D" })
HI(0, "xmlTagName", { fg = "#E06C75" })
HI(0, "xmlTag", { fg = "#ABB2BF" })
HI(0, "xmlAttrib", { fg = "#D19A66" })
HI(0, "scssVariable", { link = "sassMixing" })
HI(0, "scssSelectorName", { fg = "#D19A66" })
HI(0, "scssMixin", { link = "sassMixing" })
HI(0, "scssImport", { link = "sassInclude" })
HI(0, "scssExtend", { link = "sassInclude" })
HI(0, "sassidChar", { fg = "#E06C75" })
HI(0, "sassMixing", { link = "sassInclude" })
HI(0, "sassMixinName", { fg = "#61AFEF" })
HI(0, "Float", { fg = "#D19A66" })
HI(0, "sassInclude", { fg = "#C678DD" })
HI(0, "FloatBorder", { bg = "#21252B", fg = "#5C6370" })
HI(0, "sassClassChar", { fg = "#D19A66" })
HI(0, "rubySymbol", { fg = "#56B6C2" })
HI(0, "rubyStringDelimiter", { fg = "#98C379" })
HI(0, "rubyRegexpDelimiter", { link = "rubyRegexp" })
HI(0, "rubyRegexp", { fg = "#56B6C2" })
HI(0, "rubyInterpolationDelimiter", { fg = "#E06C75" })
HI(0, "rubyInterpolation", { fg = "#56B6C2" })
HI(0, "rubyInstanceVariable", { link = "rubyGlobalVariable" })
HI(0, "rubyIncluderubyGlobalVariable", { link = "rubyGlobalVariable" })
HI(0, "rubyInclude", { fg = "#61AFEF" })
HI(0, "rubyGlobalVariable", { fg = "#E06C75" })
HI(0, "rubyFunction", { fg = "#61AFEF" })
HI(0, "rubyEscape", { fg = "#E06C75" })
HI(0, "rubyControl", { link = "rubyClass" })
HI(0, "rubyConstant", { fg = "#E5C07B" })
HI(0, "rubyClass", { fg = "#C678DD" })
HI(0, "rubyBlockParameterList", { link = "rubyBlockParameter" })
HI(0, "rubyBlockParameter", { fg = "#E06C75" })
HI(0, "rainbowcol7", { fg = "#C678DD" })
HI(0, "rainbowcol6", { fg = "#56B6C2" })
HI(0, "rainbowcol5", { fg = "#61AFEF" })
HI(0, "rainbowcol4", { fg = "#98C379" })
HI(0, "rainbowcol3", { fg = "#D19A66" })
HI(0, "rainbowcol2", { fg = "#E5C07B" })
HI(0, "rainbowcol1", { fg = "#E06C75" })
HI(0, "qfLineNr", { link = "LineNr" })
HI(0, "qfFileName", { link = "Directory" })
HI(0, "pythonString", { fg = "#98C379" })
HI(0, "pythonStatement", { link = "pythonImport" })
HI(0, "pythonSpaceError", { bg = "#E06C75", fg = "#ABB2BF" })
HI(0, "pythonRepeat", { link = "pythonImport" })
HI(0, "pythonParens", { fg = "#E06C75" })
HI(0, "pythonOperator", { link = "pythonImport" })
HI(0, "pythonNone", { fg = "#E5C07B" })
HI(0, "pythonImport", { fg = "#C678DD" })
HI(0, "pythonDot", { fg = "#ABB2BF" })
HI(0, "pythonClass", { fg = "#E5C07B" })
HI(0, "pythonBuiltinObj", { fg = "#56B6C2" })
HI(0, "pythonBoolean", { link = "pythonNone" })
HI(0, "packerWorking", { fg = "#E5C07B" })
HI(0, "packerSuccess", { fg = "#98C379" })
HI(0, "packerStatusSuccess", { fg = "#98C379" })
HI(0, "lualine_transitional_lualine_a_normal_to_lualine_c_diagnostics_error", { fg = "#98C379" })
HI(0, "lualine_transitional_lualine_a_insert_to_lualine_c_normal", { bg = "#2C323C", fg = "#61AFEF" })
HI(0, "lualine_transitional_lualine_a_insert_to_lualine_b_normal", { bg = "#3E4452", fg = "#61AFEF" })
HI(0, "lualine_transitional_lualine_a_command_to_lualine_c_normal", { bg = "#2C323C", fg = "#E5C07B" })
HI(0, "lualine_transitional_lualine_a_command_to_lualine_b_normal", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_c_inactive", { bg = "#2C323C", fg = "#828997" })
HI(0, "lualine_c_diagnostics_warn_0", { link = "DiagnosticWarn" })
HI(0, "lualine_c_diagnostics_warn", { link = "DiagnosticWarn" })
HI(0, "lualine_c_diagnostics_info_0", { link = "DiagnosticInfo" })
HI(0, "lualine_c_diagnostics_info", { link = "DiagnosticInfo" })
HI(0, "lualine_c_diagnostics_hint_0", { link = "DiagnosticHint" })
HI(0, "lualine_c_diagnostics_hint", { link = "DiagnosticHint" })
HI(0, "lualine_c_diagnostics_error_0", { link = "DiagnosticError" })
HI(0, "lualine_c_diagnostics_error", { link = "DiagnosticError" })
HI(0, "lualine_b_inactive", { bg = "#282C34", fg = "#828997" })
HI(0, "lualine_b_diff_removed_visual", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_terminal", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_replace", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_normal", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_insert", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_inactive", { bg = "#282C34", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_command", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_visual", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_terminal", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_replace", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_normal", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_insert", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_inactive", { bg = "#282C34", fg = "#E06C75" })
HI(0, "lualine_b_diff_removed_0_command", { bg = "#3E4452", fg = "#E06C75" })
HI(0, "lualine_b_diff_modified_visual", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_terminal", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_replace", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "GitSignsVirtLnum", { link = "GitSignsDeleteVirtLn" })
HI(0, "lualine_b_diff_modified_normal", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "GitSignsDeleteVirtLnInLine", { link = "GitSignsDeleteLnInline" })
HI(0, "lualine_b_diff_modified_insert", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_inactive", { bg = "#282C34", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_command", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_0_visual", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_0_terminal", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_0_replace", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_0_normal", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "TermCursor", { bg = "#C678DD" })
HI(0, "lualine_b_diff_modified_0_insert", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_0_inactive", { bg = "#282C34", fg = "#E5C07B" })
HI(0, "lualine_b_diff_modified_0_command", { bg = "#3E4452", fg = "#E5C07B" })
HI(0, "GitSignsCurrentLineBlame", { link = "NonText" })
HI(0, "NonText", { bg = "#282C34", fg = "#5C6370" })
HI(0, "lualine_b_diff_added_visual", { bg = "#3E4452", fg = "#98C379" })
HI(0, "GitSignsDeletePreview", { bg = "#502D30" })
HI(0, "lualine_b_diff_added_terminal", { bg = "#3E4452", fg = "#98C379" })
HI(0, "lualine_b_diff_added_replace", { bg = "#3E4452", fg = "#98C379" })
HI(0, "TelescopePreviewSize", { link = "String" })
HI(0, "NvimSubscriptColon", { link = "NvimSubscript" })
HI(0, "TroubleCount", { fg = "#C678DD" })
HI(0, "@type.builtin.java", { fg = "#C678DD" })
HI(0, "WilderPopupMenuSelectedAccent",
    { bg = "#16181D", bold = true, cterm = { bold = true, underline = true }, underline = true })
HI(0, "MoreMsg", { fg = "#98C379" })
HI(0, "@type", { link = "Type" })
HI(0, "TelescopePreviewLine", { link = "Visual" })
HI(0, "@text.uri.markdown_inline", { fg = "#C678DD" })
HI(0, "TelescopeSelection", { bg = "#282C34", fg = "#C678DD" })
HI(0, "TelescopeSelectionCaret", { fg = "#C678DD" })
HI(0, "TelescopeMultiIcon", { link = "Identifier" })
HI(0, "TelescopeMultiSelection", { bg = "#282C34", fg = "#5C6370" })
HI(0, "TroubleTextError", { fg = "#ABB2BF" })
HI(0, "TelescopeResultsComment", { link = "Comment" })
HI(0, "TelescopeResultsNumber", { link = "Number" })
HI(0, "TelescopeResultsLineNr", { link = "LineNr" })
HI(0, "TelescopeResultsIdentifier", { link = "Identifier" })
HI(0, "TelescopePreviewMessageFillchar", { link = "TelescopePreviewMessage" })
HI(0, "Type", { fg = "#E5C07B" })
HI(0, "TelescopePromptTitle", { link = "TelescopeTitle" })
HI(0, "TelescopePreviewRead", { link = "Constant" })
HI(0, "diffRemoved", { fg = "#9A353D" })
HI(0, "TelescopePreviewNormal", { link = "TelescopeNormal" })
HI(0, "TelescopeNormal", { bg = "#21252B", fg = "#ABB2BF" })
HI(0, "TabLineFill", { bg = "#282C34", fg = "#ABB2BF" })
HI(0, "diffChanged", { fg = "#948B60" })
HI(0, "TSRainbowBlue", { fg = "#61AFEF" })
HI(0, "Substitute", { bg = "#E5C07B", fg = "#282C34" })
HI(0, "CopilotSuggestion", { fg = "#5C6370" })
HI(0, "diffAdded", { fg = "#109868" })
HI(0, "Structure", { fg = "#C678DD" })
HI(0, "String", { fg = "#98C379" })
HI(0, "StorageClass", { fg = "#E5C07B" })
HI(0, "StartifyFile", { fg = "#C678DD" })
HI(0, "SagaShadow", vim.empty_dict())
HI(0, "Repeat", { fg = "#C678DD" })
HI(0, "ReferencesIcon", { link = "Special" })
HI(0, "RedrawDebugRecompose", { bg = "#FF0000", ctermbg = 9 })
HI(0, "RedrawDebugComposed", { bg = "#008000", ctermbg = 10 })
HI(0, "QuickFixLineNC", { bg = "#282C34" })
HI(0, "Question", { bg = "#282C34", fg = "#5C6370" })
HI(0, "PreProc", { fg = "#E5C07B" })
HI(0, "PmenuSel", { bg = "#16181D" })
HI(0, "PmenuSbar", { bg = "#16181D" })
HI(0, "Pmenu", { bg = "#21252B" })
HI(0, "Operator", { fg = "#56B6C2" })
HI(0, "NvimTernary", { link = "NvimOperator" })
HI(0, "NvimStringSpecial", { link = "SpecialChar" })
HI(0, "NvimSingleQuotedUnknownEscape", { link = "NvimInternalError" })
HI(0, "NvimRegister", { link = "SpecialChar" })
HI(0, "NvimOptionSigil", { link = "Type" })
HI(0, "NvimOptionName", { link = "NvimIdentifier" })
HI(0, "NvimInvalidNestingParenthesis", { link = "NvimInvalidParenthesis" })
HI(0, "NvimInvalidMultiplication", { link = "NvimInvalidBinaryOperator" })
HI(0, "NeoTreeGitModified", { fg = "#E5C07B" })
HI(0, "MsgSeparator", { link = "ModeMsg" })
HI(0, "DiagnosticUnderlineHint", { cterm = { undercurl = true }, fg = "#56B6C2", undercurl = true })
HI(0, "DiagnosticUnderlineWarn", { cterm = { undercurl = true }, fg = "#E5C07B", undercurl = true })
HI(0, "DiagnosticUnderlineInfo", { cterm = { undercurl = true }, fg = "#61AFEF", undercurl = true })
HI(0, "DiagnosticFloatingError", { link = "DiagnosticError" })
HI(0, "DiagnosticFloatingWarn", { link = "DiagnosticWarn" })
HI(0, "DiagnosticSignError", { fg = "#E06C75" })
HI(0, "BufferInactive", { link = "BufferVisible" })
HI(0, "DiagnosticSignWarn", { fg = "#E5C07B" })
HI(0, "CmpItemKindStruct", { fg = "#E5C07B" })
HI(0, "Keyword", { fg = "#C678DD" })
HI(0, "CmpItemAbbr", { fg = "#ABB2BF" })
HI(0, "Italic", { cterm = { italic = true }, italic = true })
HI(0, "@text.literal.markdown_inline", { fg = "#98C379" })
HI(0, "GitSignsChange", { fg = "#948B60" })
HI(0, "GitSignsAddNr", { link = "GitSignsAdd" })
HI(0, "GitSignsAddLn", { link = "DiffAdd" })
HI(0, "GitSignsAdd", { fg = "#109868" })
HI(0, "DiagnosticSignInfo", { fg = "#61AFEF" })
HI(0, "DiagnosticUnderlineError", { cterm = { undercurl = true }, fg = "#E06C75", undercurl = true })
HI(0, "DiffAdd", { bg = "#003E4A" })
HI(0, "Comment", { fg = "#7F848E" })
HI(0, "BqfSign", { bold = true, cterm = { bold = true }, fg = "#C678DD" })
HI(0, "LspReferenceWrite", { link = "LspReferenceText" })
HI(0, "LspReferenceRead", { link = "LspReferenceText" })
HI(0, "LspReferenceText", { bg = "#414858" })
HI(0, "DiagnosticInfo", { fg = "#61AFEF" })
HI(0, "@odp.base_constructor.python", { fg = "#56B6C2" })
HI(0, "@odp.constructor.python", { link = "@constructor" })
HI(0, "@odp.expression.punctuation.bracket.javascript", { fg = "#56B6C2" })
HI(0, "@odp.function.punctuation.bracket.javascript", { fg = "#61AFEF" })
HI(0, "@odp.import_from.python", { fg = "#C678DD" })
HI(0, "@odp.jsxtag.javascript", { fg = "#D19A66" })
HI(0, "@odp.keyword.class.python", { link = "@keyword.function.python" })
HI(0, "@odp.keyword.python", vim.empty_dict())
HI(0, "@odp.nesting_selector.scss", { fg = "#E06C75" })
HI(0, "@odp.operator.fat_arrow.javascript", { fg = "#C678DD" })
HI(0, "@odp.operator.fat_arrow.typescript", { fg = "#C678DD" })
HI(0, "@odp.operator.splat.python", { fg = "#ABB2BF" })
HI(0, "@odp.property.function.typescript", { link = "@function.typescript" })
HI(0, "@odp.pseudo_class.scss", { fg = "#56B6C2" })
HI(0, "@odp.punctuation.brace.python", { fg = "#C678DD" })
HI(0, "@odp.punctuation.bracket.javascript", { fg = "#D19A66" })
HI(0, "@odp.punctuation_arguments_brackets.rust", { fg = "#C678DD" })
HI(0, "@odp.punctuation_token_bracket.rust", { fg = "#56B6C2" })
HI(0, "@odp.selector.scss", { fg = "#D19A66" })
HI(0, "@odp.statement.punctuation.bracket.javascript", { fg = "#C678DD" })
HI(0, "@odp.variable.scss", { fg = "#E06C75" })
HI(0, "@odp.vendor_prefix.scss", { fg = "#56B6C2" })
HI(0, "@operator", { fg = "#56B6C2" })
HI(0, "@operator.go", { fg = "#56B6C2" })
HI(0, "@operator.html", { fg = "#ABB2BF" })
HI(0, "@operator.lua", { fg = "#ABB2BF" })
HI(0, "@operator.rust", { fg = "#ABB2BF" })
HI(0, "@operator.toml", { fg = "#ABB2BF" })
HI(0, "@operator.vue", { fg = "#ABB2BF" })
HI(0, "@parameter", { fg = "#E06C75" })
HI(0, "@parameter.go", { fg = "#E06C75" })
HI(0, "@parameter.lua", { fg = "#ABB2BF" })
HI(0, "@parameter.markdown_inline", { fg = "#ABB2BF" })
HI(0, "@parameter.ruby", { fg = "#ABB2BF" })
HI(0, "@parameter.tsx", { fg = "#E06C75" })
HI(0, "@parameter.typescript", { fg = "#E06C75" })
HI(0, "@parameter.yaml", { fg = "#98C379" })
HI(0, "@preproc", { link = "PreProc" })
HI(0, "@property", { fg = "#E06C75" })
HI(0, "@property.go", { fg = "#E06C75" })
HI(0, "@property.scss", { fg = "#ABB2BF" })
HI(0, "@property.toml", { fg = "#C678DD" })
HI(0, "@punctuation", { link = "Delimiter" })
HI(0, "@punctuation.bracket", { fg = "#ABB2BF" })
HI(0, "@punctuation.bracket.lua", { fg = "#D19A66" })
HI(0, "@punctuation.bracket.ruby", { fg = "#E5C07B" })
HI(0, "@punctuation.bracket.rust", { fg = "#D19A66" })
HI(0, "@punctuation.bracket.scss", { fg = "#D19A66" })
HI(0, "@punctuation.bracket.tsx", { fg = "#D19A66" })
HI(0, "@punctuation.bracket.typescript", { fg = "#D19A66" })
HI(0, "@punctuation.bracket.yaml", { fg = "#D19A66" })
HI(0, "@punctuation.delimiter", { link = "Delimiter" })
HI(0, "@punctuation.delimiter.markdown_inline", { fg = "#D19A66" })
HI(0, "@punctuation.special", { fg = "#ABB2BF" })
HI(0, "@punctuation.special.markdown", { fg = "#E06C75" })
HI(0, "@repeat", { link = "Repeat" })
HI(0, "@storageclass", { link = "StorageClass" })
HI(0, "@storageclass.rust", { link = "@keyword" })
HI(0, "@string", { fg = "#98C379" })
HI(0, "@string.escape", { fg = "#56B6C2" })
HI(0, "@string.regex", { fg = "#98C379" })
HI(0, "@string.scss", { fg = "#D19A66" })
HI(0, "@string.special", { link = "Special" })
HI(0, "@string.yaml", { fg = "#98C379" })
HI(0, "@symbol", { fg = "#E06C75" })
HI(0, "@symbol.ruby", { fg = "#56B6C2" })
HI(0, "@tag", { fg = "#E06C75" })
HI(0, "@tag.attribute", { link = "@property" })
HI(0, "@tag.attribute.html", { fg = "#D19A66" })
HI(0, "@tag.attribute.tsx", { fg = "#D19A66" })
HI(0, "@tag.attribute.vue", { fg = "#D19A66" })
HI(0, "@tag.delimiter", { link = "Delimiter" })
HI(0, "@text", { fg = "#ABB2BF" })
HI(0, "@text.danger", { fg = "#E06C75" })
HI(0, "@text.environment", { link = "Macro" })
HI(0, "@text.environment.name", { link = "Type" })
HI(0, "@text.literal", { fg = "#ABB2BF" })
HI(0, "@text.math", { fg = "#ABB2BF" })
HI(0, "@text.note", { fg = "#ABB2BF" })
HI(0, "@text.reference", { bold = true, cterm = { bold = true }, fg = "#ABB2BF" })
HI(0, "@text.reference.markdown_inline", { fg = "#61AFEF" })
HI(0, "@text.strike", { cterm = { strikethrough = true }, fg = "#ABB2BF", strikethrough = true })
HI(0, "@text.strong", { link = "Bold" })
HI(0, "@text.strong.markdown_inline", { bold = true, cterm = { bold = true }, fg = "#D19A66" })
HI(0, "@text.title", { link = "Title" })
HI(0, "@text.title.markdown", { bold = true, cterm = { bold = true }, fg = "#E06C75" })
HI(0, "@text.todo", { link = "Todo" })
HI(0, "@text.todo.checked", { fg = "#61AFEF" })
HI(0, "@text.todo.unchecked", { bg = "#ABB2BF", fg = "#282C34" })
HI(0, "@text.underline", { link = "Underlined" })
HI(0, "@text.uri",
    { cterm = { italic = true, underline = true }, fg = "#61AFEF", italic = true, underline = true })
HI(0, "@text.uri.html", { cterm = { underline = true }, fg = "#98C379", underline = true })
HI(0, "TelescopeResultsFunction", { link = "Function" })
HI(0, "@text.warning", { fg = "#E5C07B" })
HI(0, "TelescopeResultsVariable", { link = "SpecialChar" })
HI(0, "@type.builtin", { link = "@type" })
HI(0, "@type.builtin.go", { fg = "#C678DD" })
HI(0, "TelescopeResultsConstant", { link = "Constant" })
HI(0, "@type.builtin.tsx", { fg = "#C678DD" })
HI(0, "@type.definition", { link = "@type" })
HI(0, "@type.go", { fg = "#E5C07B" })
